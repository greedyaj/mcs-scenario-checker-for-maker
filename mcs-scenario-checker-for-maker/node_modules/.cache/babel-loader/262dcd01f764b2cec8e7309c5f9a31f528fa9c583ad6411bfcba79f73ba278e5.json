{"ast":null,"code":"import { ResourceResponse } from \"../../request\";\nexport class OfferResponse extends ResourceResponse {\n  constructor(resource, headers, statusCode, diagnostics, offer) {\n    super(resource, headers, statusCode, diagnostics);\n    this.offer = offer;\n  }\n}","map":{"version":3,"names":["ResourceResponse","OfferResponse","constructor","resource","headers","statusCode","diagnostics","offer"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/client/Offer/OfferResponse.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { CosmosDiagnostics } from \"../../CosmosDiagnostics\";\nimport type { CosmosHeaders } from \"../../queryExecutionContext\";\nimport { ResourceResponse } from \"../../request\";\nimport type { Resource } from \"../Resource\";\nimport type { Offer } from \"./Offer\";\nimport type { OfferDefinition } from \"./OfferDefinition\";\n\nexport class OfferResponse extends ResourceResponse<OfferDefinition & Resource> {\n  constructor(\n    resource: OfferDefinition & Resource,\n    headers: CosmosHeaders,\n    statusCode: number,\n    diagnostics: CosmosDiagnostics,\n    offer?: Offer,\n  ) {\n    super(resource, headers, statusCode, diagnostics);\n    this.offer = offer;\n  }\n  /** A reference to the {@link Offer} corresponding to the returned {@link OfferDefinition}. */\n  public readonly offer: Offer;\n}\n"],"mappings":"AAIA,SAASA,gBAAgB,QAAQ,eAAe;AAKhD,OAAM,MAAOC,aAAc,SAAQD,gBAA4C;EAC7EE,YACEC,QAAoC,EACpCC,OAAsB,EACtBC,UAAkB,EAClBC,WAA8B,EAC9BC,KAAa;IAEb,KAAK,CAACJ,QAAQ,EAAEC,OAAO,EAAEC,UAAU,EAAEC,WAAW,CAAC;IACjD,IAAI,CAACC,KAAK,GAAGA,KAAK;EACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}