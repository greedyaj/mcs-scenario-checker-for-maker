{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport function validateOffer(body) {\n  if (body.throughput) {\n    if (body.maxThroughput) {\n      console.log(\"should be erroring\");\n      throw new Error(\"Cannot specify `throughput` with `maxThroughput`\");\n    }\n    if (body.autoUpgradePolicy) {\n      throw new Error(\"Cannot specify autoUpgradePolicy with throughput. Use `maxThroughput` instead\");\n    }\n  }\n}","map":{"version":3,"names":["validateOffer","body","throughput","maxThroughput","console","log","Error","autoUpgradePolicy"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/utils/offers.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { ContainerRequest } from \"../client/Container/ContainerRequest\";\n\nexport function validateOffer(body: ContainerRequest): void {\n  if (body.throughput) {\n    if (body.maxThroughput) {\n      console.log(\"should be erroring\");\n      throw new Error(\"Cannot specify `throughput` with `maxThroughput`\");\n    }\n    if (body.autoUpgradePolicy) {\n      throw new Error(\n        \"Cannot specify autoUpgradePolicy with throughput. Use `maxThroughput` instead\",\n      );\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AAIA,OAAM,SAAUA,aAAaA,CAACC,IAAsB;EAClD,IAAIA,IAAI,CAACC,UAAU,EAAE;IACnB,IAAID,IAAI,CAACE,aAAa,EAAE;MACtBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;IACrE;IACA,IAAIL,IAAI,CAACM,iBAAiB,EAAE;MAC1B,MAAM,IAAID,KAAK,CACb,+EAA+E,CAChF;IACH;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}