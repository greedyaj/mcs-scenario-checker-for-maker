{"ast":null,"code":"import { ResourceResponse } from \"../../request\";\nexport class UserResponse extends ResourceResponse {\n  constructor(resource, headers, statusCode, user, diagnostics) {\n    super(resource, headers, statusCode, diagnostics);\n    this.user = user;\n  }\n}","map":{"version":3,"names":["ResourceResponse","UserResponse","constructor","resource","headers","statusCode","user","diagnostics"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/client/User/UserResponse.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { CosmosDiagnostics } from \"../../CosmosDiagnostics\";\nimport type { CosmosHeaders } from \"../../queryExecutionContext\";\nimport { ResourceResponse } from \"../../request\";\nimport type { Resource } from \"../Resource\";\nimport type { User } from \"./User\";\nimport type { UserDefinition } from \"./UserDefinition\";\n\nexport class UserResponse extends ResourceResponse<UserDefinition & Resource> {\n  constructor(\n    resource: UserDefinition & Resource,\n    headers: CosmosHeaders,\n    statusCode: number,\n    user: User,\n    diagnostics: CosmosDiagnostics,\n  ) {\n    super(resource, headers, statusCode, diagnostics);\n    this.user = user;\n  }\n  /** A reference to the {@link User} corresponding to the returned {@link UserDefinition}. */\n  public readonly user: User;\n}\n"],"mappings":"AAIA,SAASA,gBAAgB,QAAQ,eAAe;AAKhD,OAAM,MAAOC,YAAa,SAAQD,gBAA2C;EAC3EE,YACEC,QAAmC,EACnCC,OAAsB,EACtBC,UAAkB,EAClBC,IAAU,EACVC,WAA8B;IAE9B,KAAK,CAACJ,QAAQ,EAAEC,OAAO,EAAEC,UAAU,EAAEE,WAAW,CAAC;IACjD,IAAI,CAACD,IAAI,GAAGA,IAAI;EAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}