{"ast":null,"code":"var _jsxFileName = \"/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/src/pages/AddTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTest = () => {\n  _s();\n  const [jsonInput, setJsonInput] = useState('');\n  const [error, setError] = useState('');\n  const handleJsonChange = event => {\n    setJsonInput(event.target.value);\n  };\n  const validateJson = jsonString => {\n    try {\n      JSON.parse(jsonString);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n  const handleSubmit = () => {\n    if (validateJson(jsonInput)) {\n      // Submit the valid JSON to CosmosDB\n      console.log('Submitting JSON:', jsonInput);\n      setError('');\n      // Add your submission logic here\n    } else {\n      setError('Invalid JSON format');\n    }\n  };\n  const handleBatchImport = () => {\n    // Logic for batch import of multiple test cases\n    console.log('Batch import initiated');\n    // Add your batch import logic here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 10,\n      cols: 50,\n      value: jsonInput,\n      onChange: handleJsonChange,\n      placeholder: \"Enter JSON payload here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBatchImport,\n      children: \"Batch Import\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTest, \"oYvaubR3YjAjlunLQ/GAcTGoBH4=\");\n_c = AddTest;\nexport default AddTest;\nvar _c;\n$RefreshReg$(_c, \"AddTest\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddTest","_s","jsonInput","setJsonInput","error","setError","handleJsonChange","event","target","value","validateJson","jsonString","JSON","parse","e","handleSubmit","console","log","handleBatchImport","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","onChange","placeholder","style","color","onClick","_c","$RefreshReg$"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/src/pages/AddTest.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AddTest: React.FC = () => {\n    const [jsonInput, setJsonInput] = useState<string>('');\n    const [error, setError] = useState<string>('');\n\n    const handleJsonChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setJsonInput(event.target.value);\n    };\n\n    const validateJson = (jsonString: string) => {\n        try {\n            JSON.parse(jsonString);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    const handleSubmit = () => {\n        if (validateJson(jsonInput)) {\n            // Submit the valid JSON to CosmosDB\n            console.log('Submitting JSON:', jsonInput);\n            setError('');\n            // Add your submission logic here\n        } else {\n            setError('Invalid JSON format');\n        }\n    };\n\n    const handleBatchImport = () => {\n        // Logic for batch import of multiple test cases\n        console.log('Batch import initiated');\n        // Add your batch import logic here\n    };\n\n    return (\n        <div>\n            <h2>Add Test</h2>\n            <textarea\n                rows={10}\n                cols={50}\n                value={jsonInput}\n                onChange={handleJsonChange}\n                placeholder=\"Enter JSON payload here\"\n            />\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <br />\n            <button onClick={handleSubmit}>Submit</button>\n            <button onClick={handleBatchImport}>Batch Import</button>\n        </div>\n    );\n};\n\nexport default AddTest;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EACtD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMS,gBAAgB,GAAIC,KAA6C,IAAK;IACxEJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAIC,UAAkB,IAAK;IACzC,IAAI;MACAC,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC;MACtB,OAAO,IAAI;IACf,CAAC,CAAC,OAAOG,CAAC,EAAE;MACR,OAAO,KAAK;IAChB;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIL,YAAY,CAACR,SAAS,CAAC,EAAE;MACzB;MACAc,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEf,SAAS,CAAC;MAC1CG,QAAQ,CAAC,EAAE,CAAC;MACZ;IACJ,CAAC,MAAM;MACHA,QAAQ,CAAC,qBAAqB,CAAC;IACnC;EACJ,CAAC;EAED,MAAMa,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACAF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBxB,OAAA;MACIyB,IAAI,EAAE,EAAG;MACTC,IAAI,EAAE,EAAG;MACThB,KAAK,EAAEP,SAAU;MACjBwB,QAAQ,EAAEpB,gBAAiB;MAC3BqB,WAAW,EAAC;IAAyB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EACDnB,KAAK,iBAAIL,OAAA;MAAG6B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAV,QAAA,EAAEf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxB,OAAA;MAAQ+B,OAAO,EAAEf,YAAa;MAAAI,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CxB,OAAA;MAAQ+B,OAAO,EAAEZ,iBAAkB;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAACtB,EAAA,CAlDID,OAAiB;AAAA+B,EAAA,GAAjB/B,OAAiB;AAoDvB,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}