{"ast":null,"code":"/** @hidden */\nexport class SumAggregator {\n  /**\n   * Add the provided item to aggregation result.\n   */\n  aggregate(other) {\n    if (other === undefined) {\n      return;\n    }\n    if (this.sum === undefined) {\n      this.sum = other;\n    } else {\n      this.sum += other;\n    }\n  }\n  /**\n   * Get the aggregation result.\n   */\n  getResult() {\n    return this.sum;\n  }\n}","map":{"version":3,"names":["SumAggregator","aggregate","other","undefined","sum","getResult"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/queryExecutionContext/Aggregators/SumAggregator.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { Aggregator } from \"./Aggregator\";\n\n/** @hidden */\nexport class SumAggregator implements Aggregator {\n  public sum: number;\n  /**\n   * Add the provided item to aggregation result.\n   */\n  public aggregate(other: number): void {\n    if (other === undefined) {\n      return;\n    }\n    if (this.sum === undefined) {\n      this.sum = other;\n    } else {\n      this.sum += other;\n    }\n  }\n\n  /**\n   * Get the aggregation result.\n   */\n  public getResult(): number {\n    return this.sum;\n  }\n}\n"],"mappings":"AAIA;AACA,OAAM,MAAOA,aAAa;EAExB;;;EAGOC,SAASA,CAACC,KAAa;IAC5B,IAAIA,KAAK,KAAKC,SAAS,EAAE;MACvB;IACF;IACA,IAAI,IAAI,CAACC,GAAG,KAAKD,SAAS,EAAE;MAC1B,IAAI,CAACC,GAAG,GAAGF,KAAK;IAClB,CAAC,MAAM;MACL,IAAI,CAACE,GAAG,IAAIF,KAAK;IACnB;EACF;EAEA;;;EAGOG,SAASA,CAAA;IACd,OAAO,IAAI,CAACD,GAAG;EACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}