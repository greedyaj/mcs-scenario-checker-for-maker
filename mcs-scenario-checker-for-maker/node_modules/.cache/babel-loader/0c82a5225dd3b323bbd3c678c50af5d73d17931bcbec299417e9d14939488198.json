{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { NonePartitionKeyLiteral, NullPartitionKeyLiteral } from \"./PartitionKeyInternal\";\n/**\n * Builder class for building PartitionKey.\n */\nexport class PartitionKeyBuilder {\n  constructor() {\n    this.values = [];\n  }\n  addValue(value) {\n    this.values.push(value);\n    return this;\n  }\n  addNullValue() {\n    this.values.push(NullPartitionKeyLiteral);\n    return this;\n  }\n  addNoneValue() {\n    this.values.push(NonePartitionKeyLiteral);\n    return this;\n  }\n  build() {\n    return [...this.values];\n  }\n}","map":{"version":3,"names":["NonePartitionKeyLiteral","NullPartitionKeyLiteral","PartitionKeyBuilder","constructor","values","addValue","value","push","addNullValue","addNoneValue","build"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/documents/PartitionKey.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { NonePartitionKeyLiteral, NullPartitionKeyLiteral } from \"./PartitionKeyInternal\";\n\n/**\n * PartitionKey of a container.\n * @remarks\n * - PartitionKeyDefinition is no longer part of PartitionKey. So please use PartitionKeyDefinition\n * type directly where appropriate.\n */\nexport type PartitionKey = PrimitivePartitionKeyValue | PrimitivePartitionKeyValue[];\n\n/**\n * A primitive Partition Key value.\n */\nexport type PrimitivePartitionKeyValue =\n  | string\n  | number\n  | boolean\n  | NullPartitionKeyType\n  | NonePartitionKeyType;\n\n/**\n * The returned object represents a partition key value that allows creating and accessing items\n * with a null value for the partition key.\n */\nexport type NullPartitionKeyType = null;\n\n/**\n * The returned object represents a partition key value that allows creating and accessing items\n * without a value for partition key\n */\nexport type NonePartitionKeyType = {\n  [K in any]: never;\n};\n\n/**\n * Builder class for building PartitionKey.\n */\nexport class PartitionKeyBuilder {\n  readonly values: PrimitivePartitionKeyValue[] = [];\n  public addValue(value: string | boolean | number): PartitionKeyBuilder {\n    this.values.push(value);\n    return this;\n  }\n  public addNullValue(): PartitionKeyBuilder {\n    this.values.push(NullPartitionKeyLiteral);\n    return this;\n  }\n  public addNoneValue(): PartitionKeyBuilder {\n    this.values.push(NonePartitionKeyLiteral);\n    return this;\n  }\n  public build(): PartitionKey {\n    return [...this.values];\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,uBAAuB,EAAEC,uBAAuB,QAAQ,wBAAwB;AAkCzF;;;AAGA,OAAM,MAAOC,mBAAmB;EAAhCC,YAAA;IACW,KAAAC,MAAM,GAAiC,EAAE;EAgBpD;EAfSC,QAAQA,CAACC,KAAgC;IAC9C,IAAI,CAACF,MAAM,CAACG,IAAI,CAACD,KAAK,CAAC;IACvB,OAAO,IAAI;EACb;EACOE,YAAYA,CAAA;IACjB,IAAI,CAACJ,MAAM,CAACG,IAAI,CAACN,uBAAuB,CAAC;IACzC,OAAO,IAAI;EACb;EACOQ,YAAYA,CAAA;IACjB,IAAI,CAACL,MAAM,CAACG,IAAI,CAACP,uBAAuB,CAAC;IACzC,OAAO,IAAI;EACb;EACOU,KAAKA,CAAA;IACV,OAAO,CAAC,GAAG,IAAI,CAACN,MAAM,CAAC;EACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}