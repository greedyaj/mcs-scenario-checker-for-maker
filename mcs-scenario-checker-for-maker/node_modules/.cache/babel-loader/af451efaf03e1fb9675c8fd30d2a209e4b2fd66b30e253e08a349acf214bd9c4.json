{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ParallelQueryExecutionContextBase } from \"./parallelQueryExecutionContextBase\";\n/**\n * Provides the ParallelQueryExecutionContext.\n * This class is capable of handling parallelized queries and derives from ParallelQueryExecutionContextBase.\n * @hidden\n */\nexport class ParallelQueryExecutionContext extends ParallelQueryExecutionContextBase {\n  // Instance members are inherited\n  // Overriding documentProducerComparator for ParallelQueryExecutionContexts\n  /**\n   * Provides a Comparator for document producers using the min value of the corresponding target partition.\n   * @returns Comparator Function\n   * @hidden\n   */\n  documentProducerComparator(docProd1, docProd2) {\n    return docProd1.generation - docProd2.generation;\n  }\n}","map":{"version":3,"names":["ParallelQueryExecutionContextBase","ParallelQueryExecutionContext","documentProducerComparator","docProd1","docProd2","generation"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/queryExecutionContext/parallelQueryExecutionContext.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { DocumentProducer } from \"./documentProducer\";\nimport type { ExecutionContext } from \"./ExecutionContext\";\nimport { ParallelQueryExecutionContextBase } from \"./parallelQueryExecutionContextBase\";\n\n/**\n * Provides the ParallelQueryExecutionContext.\n * This class is capable of handling parallelized queries and derives from ParallelQueryExecutionContextBase.\n * @hidden\n */\nexport class ParallelQueryExecutionContext\n  extends ParallelQueryExecutionContextBase\n  implements ExecutionContext\n{\n  // Instance members are inherited\n\n  // Overriding documentProducerComparator for ParallelQueryExecutionContexts\n  /**\n   * Provides a Comparator for document producers using the min value of the corresponding target partition.\n   * @returns Comparator Function\n   * @hidden\n   */\n  public documentProducerComparator(\n    docProd1: DocumentProducer,\n    docProd2: DocumentProducer,\n  ): number {\n    return docProd1.generation - docProd2.generation;\n  }\n}\n"],"mappings":"AAAA;AACA;AAIA,SAASA,iCAAiC,QAAQ,qCAAqC;AAEvF;;;;;AAKA,OAAM,MAAOC,6BACX,SAAQD,iCAAiC;EAGzC;EAEA;EACA;;;;;EAKOE,0BAA0BA,CAC/BC,QAA0B,EAC1BC,QAA0B;IAE1B,OAAOD,QAAQ,CAACE,UAAU,GAAGD,QAAQ,CAACC,UAAU;EAClD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}