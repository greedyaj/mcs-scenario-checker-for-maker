{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { encodeUTF8, encodeBase64 } from \"./encode\";\nimport atob from \"./atob\";\nimport { globalCrypto } from \"./globalCrypto\";\nexport async function hmac(key, message) {\n  const importParams = {\n    name: \"HMAC\",\n    hash: {\n      name: \"SHA-256\"\n    }\n  };\n  const encodedMessage = new Uint8Array([...unescape(encodeURIComponent(message))].map(c => c.charCodeAt(0)));\n  const encodedKey = encodeUTF8(atob(key));\n  const cryptoKey = await globalCrypto.subtle.importKey(\"raw\", encodedKey, importParams, false, [\"sign\"]);\n  const signature = await globalCrypto.subtle.sign(importParams, cryptoKey, encodedMessage);\n  return encodeBase64(signature);\n}","map":{"version":3,"names":["encodeUTF8","encodeBase64","atob","globalCrypto","hmac","key","message","importParams","name","hash","encodedMessage","Uint8Array","unescape","encodeURIComponent","map","c","charCodeAt","encodedKey","cryptoKey","subtle","importKey","signature","sign"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/utils/hmac.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { encodeUTF8, encodeBase64 } from \"./encode\";\nimport atob from \"./atob\";\nimport { globalCrypto } from \"./globalCrypto\";\n\nexport async function hmac(key: string, message: string): Promise<string> {\n  const importParams: HmacImportParams = { name: \"HMAC\", hash: { name: \"SHA-256\" } };\n  const encodedMessage = new Uint8Array(\n    [...unescape(encodeURIComponent(message))].map((c) => c.charCodeAt(0)),\n  );\n  const encodedKey = encodeUTF8(atob(key));\n  const cryptoKey = await globalCrypto.subtle.importKey(\"raw\", encodedKey, importParams, false, [\n    \"sign\",\n  ]);\n  const signature = await globalCrypto.subtle.sign(importParams, cryptoKey, encodedMessage);\n\n  return encodeBase64(signature);\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,UAAU,EAAEC,YAAY,QAAQ,UAAU;AACnD,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,OAAO,eAAeC,IAAIA,CAACC,GAAW,EAAEC,OAAe;EACrD,MAAMC,YAAY,GAAqB;IAAEC,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;MAAED,IAAI,EAAE;IAAS;EAAE,CAAE;EAClF,MAAME,cAAc,GAAG,IAAIC,UAAU,CACnC,CAAC,GAAGC,QAAQ,CAACC,kBAAkB,CAACP,OAAO,CAAC,CAAC,CAAC,CAACQ,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CACvE;EACD,MAAMC,UAAU,GAAGjB,UAAU,CAACE,IAAI,CAACG,GAAG,CAAC,CAAC;EACxC,MAAMa,SAAS,GAAG,MAAMf,YAAY,CAACgB,MAAM,CAACC,SAAS,CAAC,KAAK,EAAEH,UAAU,EAAEV,YAAY,EAAE,KAAK,EAAE,CAC5F,MAAM,CACP,CAAC;EACF,MAAMc,SAAS,GAAG,MAAMlB,YAAY,CAACgB,MAAM,CAACG,IAAI,CAACf,YAAY,EAAEW,SAAS,EAAER,cAAc,CAAC;EAEzF,OAAOT,YAAY,CAACoB,SAAS,CAAC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}