{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Specifies the supported indexing modes.\n */\nexport var IndexingMode;\n(function (IndexingMode) {\n  /**\n   * Index is updated synchronously with a create or update operation.\n   *\n   * With consistent indexing, query behavior is the same as the default consistency level for the container.\n   * The index is always kept up to date with the data.\n   */\n  IndexingMode[\"consistent\"] = \"consistent\";\n  /**\n   * Index is updated asynchronously with respect to a create or update operation.\n   *\n   * With lazy indexing, queries are eventually consistent. The index is updated when the container is idle.\n   */\n  IndexingMode[\"lazy\"] = \"lazy\";\n  /** No Index is provided. */\n  IndexingMode[\"none\"] = \"none\";\n})(IndexingMode || (IndexingMode = {}));","map":{"version":3,"names":["IndexingMode"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/documents/IndexingMode.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Specifies the supported indexing modes.\n */\nexport enum IndexingMode {\n  /**\n   * Index is updated synchronously with a create or update operation.\n   *\n   * With consistent indexing, query behavior is the same as the default consistency level for the container.\n   * The index is always kept up to date with the data.\n   */\n  consistent = \"consistent\",\n  /**\n   * Index is updated asynchronously with respect to a create or update operation.\n   *\n   * With lazy indexing, queries are eventually consistent. The index is updated when the container is idle.\n   */\n  lazy = \"lazy\",\n  /** No Index is provided. */\n  none = \"none\",\n}\n"],"mappings":"AAAA;AACA;AACA;;;AAGA,WAAYA,YAgBX;AAhBD,WAAYA,YAAY;EACtB;;;;;;EAMAA,YAAA,6BAAyB;EACzB;;;;;EAKAA,YAAA,iBAAa;EACb;EACAA,YAAA,iBAAa;AACf,CAAC,EAhBWA,YAAY,KAAZA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}