{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nconst globalRef = typeof self === \"undefined\" ? window : self;\nif (!globalRef) {\n  throw new Error(\"Could not find global\");\n}\nconst globalCrypto = globalRef.crypto || globalRef.msCrypto;\nif (!globalCrypto || !globalCrypto.subtle) {\n  throw new Error(\"Browser does not support cryptography functions\");\n}\nexport { globalCrypto };","map":{"version":3,"names":["globalRef","self","window","Error","globalCrypto","crypto","msCrypto","subtle"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/utils/globalCrypto.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nconst globalRef: any = typeof self === \"undefined\" ? window : self;\n\nif (!globalRef) {\n  throw new Error(\"Could not find global\");\n}\n\nconst globalCrypto: Crypto = globalRef.crypto || globalRef.msCrypto;\n\nif (!globalCrypto || !globalCrypto.subtle) {\n  throw new Error(\"Browser does not support cryptography functions\");\n}\n\nexport { globalCrypto };\n"],"mappings":"AAAA;AACA;AAEA;AACA,MAAMA,SAAS,GAAQ,OAAOC,IAAI,KAAK,WAAW,GAAGC,MAAM,GAAGD,IAAI;AAElE,IAAI,CAACD,SAAS,EAAE;EACd,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;AAC1C;AAEA,MAAMC,YAAY,GAAWJ,SAAS,CAACK,MAAM,IAAIL,SAAS,CAACM,QAAQ;AAEnE,IAAI,CAACF,YAAY,IAAI,CAACA,YAAY,CAACG,MAAM,EAAE;EACzC,MAAM,IAAIJ,KAAK,CAAC,iDAAiD,CAAC;AACpE;AAEA,SAASC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}