{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { hmac } from \"./hmac\";\nimport { ResourceType, Constants } from \"../common\";\nexport async function generateHeaders(masterKey, method, resourceType = ResourceType.none, resourceId = \"\", date = new Date()) {\n  if (masterKey.startsWith(\"type=sas&\")) {\n    return {\n      [Constants.HttpHeaders.Authorization]: encodeURIComponent(masterKey),\n      [Constants.HttpHeaders.XDate]: date.toUTCString()\n    };\n  }\n  const sig = await signature(masterKey, method, resourceType, resourceId, date);\n  return {\n    [Constants.HttpHeaders.Authorization]: sig,\n    [Constants.HttpHeaders.XDate]: date.toUTCString()\n  };\n}\nasync function signature(masterKey, method, resourceType, resourceId = \"\", date = new Date()) {\n  const type = \"master\";\n  const version = \"1.0\";\n  const text = method.toLowerCase() + \"\\n\" + resourceType.toLowerCase() + \"\\n\" + resourceId + \"\\n\" + date.toUTCString().toLowerCase() + \"\\n\" + \"\" + \"\\n\";\n  const signed = await hmac(masterKey, text);\n  return encodeURIComponent(\"type=\" + type + \"&ver=\" + version + \"&sig=\" + signed);\n}","map":{"version":3,"names":["hmac","ResourceType","Constants","generateHeaders","masterKey","method","resourceType","none","resourceId","date","Date","startsWith","HttpHeaders","Authorization","encodeURIComponent","XDate","toUTCString","sig","signature","type","version","text","toLowerCase","signed"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/utils/headers.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { hmac } from \"./hmac\";\nimport type { HTTPMethod } from \"../common\";\nimport { ResourceType, Constants } from \"../common\";\n\nexport async function generateHeaders(\n  masterKey: string,\n  method: HTTPMethod,\n  resourceType: ResourceType = ResourceType.none,\n  resourceId: string = \"\",\n  date = new Date(),\n): Promise<{\n  [x: string]: string;\n}> {\n  if (masterKey.startsWith(\"type=sas&\")) {\n    return {\n      [Constants.HttpHeaders.Authorization]: encodeURIComponent(masterKey),\n      [Constants.HttpHeaders.XDate]: date.toUTCString(),\n    };\n  }\n  const sig = await signature(masterKey, method, resourceType, resourceId, date);\n\n  return {\n    [Constants.HttpHeaders.Authorization]: sig,\n    [Constants.HttpHeaders.XDate]: date.toUTCString(),\n  };\n}\n\nasync function signature(\n  masterKey: string,\n  method: HTTPMethod,\n  resourceType: ResourceType,\n  resourceId: string = \"\",\n  date = new Date(),\n): Promise<string> {\n  const type = \"master\";\n  const version = \"1.0\";\n  const text =\n    method.toLowerCase() +\n    \"\\n\" +\n    resourceType.toLowerCase() +\n    \"\\n\" +\n    resourceId +\n    \"\\n\" +\n    date.toUTCString().toLowerCase() +\n    \"\\n\" +\n    \"\" +\n    \"\\n\";\n\n  const signed = await hmac(masterKey, text);\n\n  return encodeURIComponent(\"type=\" + type + \"&ver=\" + version + \"&sig=\" + signed);\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,IAAI,QAAQ,QAAQ;AAE7B,SAASC,YAAY,EAAEC,SAAS,QAAQ,WAAW;AAEnD,OAAO,eAAeC,eAAeA,CACnCC,SAAiB,EACjBC,MAAkB,EAClBC,YAAA,GAA6BL,YAAY,CAACM,IAAI,EAC9CC,UAAA,GAAqB,EAAE,EACvBC,IAAI,GAAG,IAAIC,IAAI,EAAE;EAIjB,IAAIN,SAAS,CAACO,UAAU,CAAC,WAAW,CAAC,EAAE;IACrC,OAAO;MACL,CAACT,SAAS,CAACU,WAAW,CAACC,aAAa,GAAGC,kBAAkB,CAACV,SAAS,CAAC;MACpE,CAACF,SAAS,CAACU,WAAW,CAACG,KAAK,GAAGN,IAAI,CAACO,WAAW;KAChD;EACH;EACA,MAAMC,GAAG,GAAG,MAAMC,SAAS,CAACd,SAAS,EAAEC,MAAM,EAAEC,YAAY,EAAEE,UAAU,EAAEC,IAAI,CAAC;EAE9E,OAAO;IACL,CAACP,SAAS,CAACU,WAAW,CAACC,aAAa,GAAGI,GAAG;IAC1C,CAACf,SAAS,CAACU,WAAW,CAACG,KAAK,GAAGN,IAAI,CAACO,WAAW;GAChD;AACH;AAEA,eAAeE,SAASA,CACtBd,SAAiB,EACjBC,MAAkB,EAClBC,YAA0B,EAC1BE,UAAA,GAAqB,EAAE,EACvBC,IAAI,GAAG,IAAIC,IAAI,EAAE;EAEjB,MAAMS,IAAI,GAAG,QAAQ;EACrB,MAAMC,OAAO,GAAG,KAAK;EACrB,MAAMC,IAAI,GACRhB,MAAM,CAACiB,WAAW,EAAE,GACpB,IAAI,GACJhB,YAAY,CAACgB,WAAW,EAAE,GAC1B,IAAI,GACJd,UAAU,GACV,IAAI,GACJC,IAAI,CAACO,WAAW,EAAE,CAACM,WAAW,EAAE,GAChC,IAAI,GACJ,EAAE,GACF,IAAI;EAEN,MAAMC,MAAM,GAAG,MAAMvB,IAAI,CAACI,SAAS,EAAEiB,IAAI,CAAC;EAE1C,OAAOP,kBAAkB,CAAC,OAAO,GAAGK,IAAI,GAAG,OAAO,GAAGC,OAAO,GAAG,OAAO,GAAGG,MAAM,CAAC;AAClF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}