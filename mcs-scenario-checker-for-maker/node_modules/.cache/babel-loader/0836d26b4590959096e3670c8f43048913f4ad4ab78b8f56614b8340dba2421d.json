{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { OrderByDocumentProducerComparator } from \"../orderByDocumentProducerComparator\";\n/** @hidden */\nexport class MaxAggregator {\n  /**\n   * Represents an aggregator for MAX operator.\n   * @hidden\n   */\n  constructor() {\n    this.value = undefined;\n    this.comparer = new OrderByDocumentProducerComparator([\"Ascending\"]);\n  }\n  /**\n   * Add the provided item to aggregation result.\n   */\n  aggregate(other) {\n    if (this.value === undefined) {\n      this.value = other.max;\n    } else if (this.comparer.compareValue(other.max, typeof other.max, this.value, typeof this.value) > 0) {\n      this.value = other.max;\n    }\n  }\n  /**\n   * Get the aggregation result.\n   */\n  getResult() {\n    return this.value;\n  }\n}","map":{"version":3,"names":["OrderByDocumentProducerComparator","MaxAggregator","constructor","value","undefined","comparer","aggregate","other","max","compareValue","getResult"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/queryExecutionContext/Aggregators/MaxAggregator.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { OrderByDocumentProducerComparator } from \"../orderByDocumentProducerComparator\";\nimport type { Aggregator } from \"./Aggregator\";\n\ninterface MaxAggregateResult {\n  count: number;\n  max?: number;\n}\n\n/** @hidden */\nexport class MaxAggregator implements Aggregator {\n  private value: number;\n  private comparer: OrderByDocumentProducerComparator;\n  /**\n   * Represents an aggregator for MAX operator.\n   * @hidden\n   */\n  constructor() {\n    this.value = undefined;\n    this.comparer = new OrderByDocumentProducerComparator([\"Ascending\"]);\n  }\n  /**\n   * Add the provided item to aggregation result.\n   */\n  public aggregate(other: MaxAggregateResult): void {\n    if (this.value === undefined) {\n      this.value = other.max;\n    } else if (\n      this.comparer.compareValue(other.max, typeof other.max, this.value, typeof this.value) > 0\n    ) {\n      this.value = other.max;\n    }\n  }\n\n  /**\n   * Get the aggregation result.\n   */\n  public getResult(): number {\n    return this.value;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,iCAAiC,QAAQ,sCAAsC;AAQxF;AACA,OAAM,MAAOC,aAAa;EAGxB;;;;EAIAC,YAAA;IACE,IAAI,CAACC,KAAK,GAAGC,SAAS;IACtB,IAAI,CAACC,QAAQ,GAAG,IAAIL,iCAAiC,CAAC,CAAC,WAAW,CAAC,CAAC;EACtE;EACA;;;EAGOM,SAASA,CAACC,KAAyB;IACxC,IAAI,IAAI,CAACJ,KAAK,KAAKC,SAAS,EAAE;MAC5B,IAAI,CAACD,KAAK,GAAGI,KAAK,CAACC,GAAG;IACxB,CAAC,MAAM,IACL,IAAI,CAACH,QAAQ,CAACI,YAAY,CAACF,KAAK,CAACC,GAAG,EAAE,OAAOD,KAAK,CAACC,GAAG,EAAE,IAAI,CAACL,KAAK,EAAE,OAAO,IAAI,CAACA,KAAK,CAAC,GAAG,CAAC,EAC1F;MACA,IAAI,CAACA,KAAK,GAAGI,KAAK,CAACC,GAAG;IACxB;EACF;EAEA;;;EAGOE,SAASA,CAAA;IACd,OAAO,IAAI,CAACP,KAAK;EACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}