{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { OrderByDocumentProducerComparator } from \"../orderByDocumentProducerComparator\";\n/** @hidden */\nexport class MinAggregator {\n  /**\n   * Represents an aggregator for MIN operator.\n   * @hidden\n   */\n  constructor() {\n    this.value = undefined;\n    this.comparer = new OrderByDocumentProducerComparator([\"Ascending\"]);\n  }\n  /**\n   * Add the provided item to aggregation result.\n   */\n  aggregate(other) {\n    if (this.value === undefined) {\n      // || typeof this.value === \"object\"\n      this.value = other.min;\n    } else {\n      const otherType = other.min === null ? \"NoValue\" : typeof other.min; // || typeof other === \"object\"\n      const thisType = this.value === null ? \"NoValue\" : typeof this.value;\n      if (this.comparer.compareValue(other.min, otherType, this.value, thisType) < 0) {\n        this.value = other.min;\n      }\n    }\n  }\n  /**\n   * Get the aggregation result.\n   */\n  getResult() {\n    return this.value;\n  }\n}","map":{"version":3,"names":["OrderByDocumentProducerComparator","MinAggregator","constructor","value","undefined","comparer","aggregate","other","min","otherType","thisType","compareValue","getResult"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/queryExecutionContext/Aggregators/MinAggregator.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { OrderByDocumentProducerComparator } from \"../orderByDocumentProducerComparator\";\nimport type { Aggregator } from \"./Aggregator\";\n\nexport interface MinAggregateResult {\n  min: number;\n  count: number;\n}\n\n/** @hidden */\nexport class MinAggregator implements Aggregator {\n  private value: number;\n  private comparer: OrderByDocumentProducerComparator;\n  /**\n   * Represents an aggregator for MIN operator.\n   * @hidden\n   */\n  constructor() {\n    this.value = undefined;\n    this.comparer = new OrderByDocumentProducerComparator([\"Ascending\"]);\n  }\n  /**\n   * Add the provided item to aggregation result.\n   */\n  public aggregate(other: MinAggregateResult): void {\n    if (this.value === undefined) {\n      // || typeof this.value === \"object\"\n      this.value = other.min;\n    } else {\n      const otherType = other.min === null ? \"NoValue\" : typeof other.min; // || typeof other === \"object\"\n      const thisType = this.value === null ? \"NoValue\" : typeof this.value;\n      if (this.comparer.compareValue(other.min, otherType, this.value, thisType) < 0) {\n        this.value = other.min;\n      }\n    }\n  }\n\n  /**\n   * Get the aggregation result.\n   */\n  public getResult(): number {\n    return this.value;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,iCAAiC,QAAQ,sCAAsC;AAQxF;AACA,OAAM,MAAOC,aAAa;EAGxB;;;;EAIAC,YAAA;IACE,IAAI,CAACC,KAAK,GAAGC,SAAS;IACtB,IAAI,CAACC,QAAQ,GAAG,IAAIL,iCAAiC,CAAC,CAAC,WAAW,CAAC,CAAC;EACtE;EACA;;;EAGOM,SAASA,CAACC,KAAyB;IACxC,IAAI,IAAI,CAACJ,KAAK,KAAKC,SAAS,EAAE;MAC5B;MACA,IAAI,CAACD,KAAK,GAAGI,KAAK,CAACC,GAAG;IACxB,CAAC,MAAM;MACL,MAAMC,SAAS,GAAGF,KAAK,CAACC,GAAG,KAAK,IAAI,GAAG,SAAS,GAAG,OAAOD,KAAK,CAACC,GAAG,CAAC,CAAC;MACrE,MAAME,QAAQ,GAAG,IAAI,CAACP,KAAK,KAAK,IAAI,GAAG,SAAS,GAAG,OAAO,IAAI,CAACA,KAAK;MACpE,IAAI,IAAI,CAACE,QAAQ,CAACM,YAAY,CAACJ,KAAK,CAACC,GAAG,EAAEC,SAAS,EAAE,IAAI,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC9E,IAAI,CAACP,KAAK,GAAGI,KAAK,CAACC,GAAG;MACxB;IACF;EACF;EAEA;;;EAGOI,SAASA,CAAA;IACd,OAAO,IAAI,CAACT,KAAK;EACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}