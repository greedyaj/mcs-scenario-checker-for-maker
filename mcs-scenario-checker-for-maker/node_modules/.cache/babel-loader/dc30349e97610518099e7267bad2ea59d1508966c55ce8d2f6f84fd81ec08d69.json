{"ast":null,"code":"import { ResourceResponse } from \"../../request/ResourceResponse\";\n/** Response object for Database operations */\nexport class DatabaseResponse extends ResourceResponse {\n  constructor(resource, headers, statusCode, database, diagnostics) {\n    super(resource, headers, statusCode, diagnostics);\n    this.database = database;\n  }\n}","map":{"version":3,"names":["ResourceResponse","DatabaseResponse","constructor","resource","headers","statusCode","database","diagnostics"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/client/Database/DatabaseResponse.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { CosmosDiagnostics } from \"../../CosmosDiagnostics\";\nimport type { CosmosHeaders } from \"../../queryExecutionContext\";\nimport { ResourceResponse } from \"../../request/ResourceResponse\";\nimport type { Resource } from \"../Resource\";\nimport type { Database } from \"./Database\";\nimport type { DatabaseDefinition } from \"./DatabaseDefinition\";\n\n/** Response object for Database operations */\nexport class DatabaseResponse extends ResourceResponse<DatabaseDefinition & Resource> {\n  constructor(\n    resource: DatabaseDefinition & Resource,\n    headers: CosmosHeaders,\n    statusCode: number,\n    database: Database,\n    diagnostics: CosmosDiagnostics,\n  ) {\n    super(resource, headers, statusCode, diagnostics);\n    this.database = database;\n  }\n  /** A reference to the {@link Database} that the returned {@link DatabaseDefinition} corresponds to. */\n  public readonly database: Database;\n}\n"],"mappings":"AAIA,SAASA,gBAAgB,QAAQ,gCAAgC;AAKjE;AACA,OAAM,MAAOC,gBAAiB,SAAQD,gBAA+C;EACnFE,YACEC,QAAuC,EACvCC,OAAsB,EACtBC,UAAkB,EAClBC,QAAkB,EAClBC,WAA8B;IAE9B,KAAK,CAACJ,QAAQ,EAAEC,OAAO,EAAEC,UAAU,EAAEE,WAAW,CAAC;IACjD,IAAI,CAACD,QAAQ,GAAGA,QAAQ;EAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}