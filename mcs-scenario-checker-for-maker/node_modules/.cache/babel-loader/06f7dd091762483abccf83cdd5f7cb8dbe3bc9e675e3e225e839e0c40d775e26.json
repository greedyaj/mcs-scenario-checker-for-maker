{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport async function readPartitionKeyDefinition(diagnosticNode, container) {\n  const partitionKeyDefinition = await container.readPartitionKeyDefinition(diagnosticNode);\n  return partitionKeyDefinition.resource;\n}","map":{"version":3,"names":["readPartitionKeyDefinition","diagnosticNode","container","partitionKeyDefinition","resource"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/client/ClientUtils.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { DiagnosticNodeInternal } from \"../diagnostics/DiagnosticNodeInternal\";\nimport type { PartitionKeyDefinition } from \"../documents\";\nimport type { Container } from \"./Container\";\n\nexport async function readPartitionKeyDefinition(\n  diagnosticNode: DiagnosticNodeInternal,\n  container: Container,\n): Promise<PartitionKeyDefinition> {\n  const partitionKeyDefinition = await container.readPartitionKeyDefinition(diagnosticNode);\n  return partitionKeyDefinition.resource;\n}\n"],"mappings":"AAAA;AACA;AAMA,OAAO,eAAeA,0BAA0BA,CAC9CC,cAAsC,EACtCC,SAAoB;EAEpB,MAAMC,sBAAsB,GAAG,MAAMD,SAAS,CAACF,0BAA0B,CAACC,cAAc,CAAC;EACzF,OAAOE,sBAAsB,CAACC,QAAQ;AACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}