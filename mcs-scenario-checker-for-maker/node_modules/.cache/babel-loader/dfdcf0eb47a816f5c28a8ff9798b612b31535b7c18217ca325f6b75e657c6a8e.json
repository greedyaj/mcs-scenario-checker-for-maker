{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Stores the most favourable distinct result from a set of nonStreamingOrderBy results.\n */\nexport class NonStreamingOrderByMap {\n  constructor(compareFn) {\n    this.compareFn = compareFn;\n    this.map = new Map();\n  }\n  set(key, value) {\n    if (!this.map.has(key)) {\n      // If the key is not present in the map, add it.\n      this.map.set(key, value);\n    } else {\n      // If the key is present in the map, compare the similarity score of the new value with the old value. Keep the more favourable one.\n      const oldValue = this.map.get(key);\n      if (this.replaceResults(oldValue, value)) {\n        this.map.set(key, value);\n      }\n    }\n  }\n  get(key) {\n    if (!this.map.has(key)) return undefined;\n    return this.map.get(key);\n  }\n  /**\n   * Returns all the values in the map and resets the map.\n   */\n  getAllValuesAndReset() {\n    const res = [];\n    for (const [key, value] of this.map) {\n      res.push(value);\n      this.map.delete(key);\n    }\n    return res;\n  }\n  replaceResults(res1, res2) {\n    const res = this.compareFn(res1, res2);\n    if (res < 0) return true;\n    return false;\n  }\n  size() {\n    return this.map.size;\n  }\n}","map":{"version":3,"names":["NonStreamingOrderByMap","constructor","compareFn","map","Map","set","key","value","has","oldValue","get","replaceResults","undefined","getAllValuesAndReset","res","push","delete","res1","res2","size"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/utils/nonStreamingOrderByMap.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Stores the most favourable distinct result from a set of nonStreamingOrderBy results.\n */\nexport class NonStreamingOrderByMap<T> {\n  private map: Map<string, T>;\n  private compareFn: (a: T | undefined, b: T | undefined) => number;\n\n  constructor(compareFn: (a: T | undefined, b: T | undefined) => number) {\n    this.compareFn = compareFn;\n    this.map = new Map<string, T>();\n  }\n\n  public set(key: string, value: T): void {\n    if (!this.map.has(key)) {\n      // If the key is not present in the map, add it.\n      this.map.set(key, value);\n    } else {\n      // If the key is present in the map, compare the similarity score of the new value with the old value. Keep the more favourable one.\n      const oldValue = this.map.get(key);\n      if (this.replaceResults(oldValue, value)) {\n        this.map.set(key, value);\n      }\n    }\n  }\n\n  public get(key: string): T | undefined {\n    if (!this.map.has(key)) return undefined;\n\n    return this.map.get(key);\n  }\n  /**\n   * Returns all the values in the map and resets the map.\n   */\n  public getAllValuesAndReset(): T[] {\n    const res: T[] = [];\n    for (const [key, value] of this.map) {\n      res.push(value);\n      this.map.delete(key);\n    }\n    return res;\n  }\n\n  private replaceResults(res1: T | undefined, res2: T | undefined): boolean {\n    const res = this.compareFn(res1, res2);\n    if (res < 0) return true;\n\n    return false;\n  }\n\n  public size(): number {\n    return this.map.size;\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA;;;AAGA,OAAM,MAAOA,sBAAsB;EAIjCC,YAAYC,SAAyD;IACnE,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,GAAG,GAAG,IAAIC,GAAG,EAAa;EACjC;EAEOC,GAAGA,CAACC,GAAW,EAAEC,KAAQ;IAC9B,IAAI,CAAC,IAAI,CAACJ,GAAG,CAACK,GAAG,CAACF,GAAG,CAAC,EAAE;MACtB;MACA,IAAI,CAACH,GAAG,CAACE,GAAG,CAACC,GAAG,EAAEC,KAAK,CAAC;IAC1B,CAAC,MAAM;MACL;MACA,MAAME,QAAQ,GAAG,IAAI,CAACN,GAAG,CAACO,GAAG,CAACJ,GAAG,CAAC;MAClC,IAAI,IAAI,CAACK,cAAc,CAACF,QAAQ,EAAEF,KAAK,CAAC,EAAE;QACxC,IAAI,CAACJ,GAAG,CAACE,GAAG,CAACC,GAAG,EAAEC,KAAK,CAAC;MAC1B;IACF;EACF;EAEOG,GAAGA,CAACJ,GAAW;IACpB,IAAI,CAAC,IAAI,CAACH,GAAG,CAACK,GAAG,CAACF,GAAG,CAAC,EAAE,OAAOM,SAAS;IAExC,OAAO,IAAI,CAACT,GAAG,CAACO,GAAG,CAACJ,GAAG,CAAC;EAC1B;EACA;;;EAGOO,oBAAoBA,CAAA;IACzB,MAAMC,GAAG,GAAQ,EAAE;IACnB,KAAK,MAAM,CAACR,GAAG,EAAEC,KAAK,CAAC,IAAI,IAAI,CAACJ,GAAG,EAAE;MACnCW,GAAG,CAACC,IAAI,CAACR,KAAK,CAAC;MACf,IAAI,CAACJ,GAAG,CAACa,MAAM,CAACV,GAAG,CAAC;IACtB;IACA,OAAOQ,GAAG;EACZ;EAEQH,cAAcA,CAACM,IAAmB,EAAEC,IAAmB;IAC7D,MAAMJ,GAAG,GAAG,IAAI,CAACZ,SAAS,CAACe,IAAI,EAAEC,IAAI,CAAC;IACtC,IAAIJ,GAAG,GAAG,CAAC,EAAE,OAAO,IAAI;IAExB,OAAO,KAAK;EACd;EAEOK,IAAIA,CAAA;IACT,OAAO,IAAI,CAAChB,GAAG,CAACgB,IAAI;EACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}