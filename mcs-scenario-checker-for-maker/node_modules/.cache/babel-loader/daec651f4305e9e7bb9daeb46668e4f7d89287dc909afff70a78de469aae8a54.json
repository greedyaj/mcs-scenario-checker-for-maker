{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ErrorResponse } from \"../../request\";\n/**\n * Specifies a feed range for the changefeed.\n */\nexport class FeedRange {\n  /**\n   * @internal\n   */\n  constructor(minInclusive, maxExclusive) {\n    // only way to explictly block users from creating FeedRange directly in JS\n    if (new.target === FeedRange) {\n      throw new ErrorResponse(\"Cannot instantiate abstract class FeedRange\");\n    }\n    this.minInclusive = minInclusive;\n    this.maxExclusive = maxExclusive;\n  }\n}\n/**\n * @hidden\n * Specifies a feed range for the changefeed.\n */\nexport class FeedRangeInternal extends FeedRange {\n  /* eslint-disable @typescript-eslint/no-useless-constructor */\n  constructor(minInclusive, maxExclusive) {\n    super(minInclusive, maxExclusive);\n  }\n}","map":{"version":3,"names":["ErrorResponse","FeedRange","constructor","minInclusive","maxExclusive","new","target","FeedRangeInternal"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/client/ChangeFeed/FeedRange.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { ErrorResponse } from \"../../request\";\n\n/**\n * Specifies a feed range for the changefeed.\n */\nexport abstract class FeedRange {\n  /**\n   * Min value for the feed range.\n   */\n  readonly minInclusive: string;\n  /**\n   * Max value for the feed range.\n   */\n  readonly maxExclusive: string;\n  /**\n   * @internal\n   */\n  protected constructor(minInclusive: string, maxExclusive: string) {\n    // only way to explictly block users from creating FeedRange directly in JS\n    if (new.target === FeedRange) {\n      throw new ErrorResponse(\"Cannot instantiate abstract class FeedRange\");\n    }\n\n    this.minInclusive = minInclusive;\n    this.maxExclusive = maxExclusive;\n  }\n}\n\n/**\n * @hidden\n * Specifies a feed range for the changefeed.\n */\nexport class FeedRangeInternal extends FeedRange {\n  /* eslint-disable @typescript-eslint/no-useless-constructor */\n  constructor(minInclusive: string, maxExclusive: string) {\n    super(minInclusive, maxExclusive);\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,aAAa,QAAQ,eAAe;AAE7C;;;AAGA,OAAM,MAAgBC,SAAS;EAS7B;;;EAGAC,YAAsBC,YAAoB,EAAEC,YAAoB;IAC9D;IACA,IAAIC,GAAG,CAACC,MAAM,KAAKL,SAAS,EAAE;MAC5B,MAAM,IAAID,aAAa,CAAC,6CAA6C,CAAC;IACxE;IAEA,IAAI,CAACG,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;;AAGF;;;;AAIA,OAAM,MAAOG,iBAAkB,SAAQN,SAAS;EAC9C;EACAC,YAAYC,YAAoB,EAAEC,YAAoB;IACpD,KAAK,CAACD,YAAY,EAAEC,YAAY,CAAC;EACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}