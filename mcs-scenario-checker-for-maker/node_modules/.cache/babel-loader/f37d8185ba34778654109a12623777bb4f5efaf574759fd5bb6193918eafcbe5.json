{"ast":null,"code":"import { ResourceResponse } from \"../../request\";\nexport class PermissionResponse extends ResourceResponse {\n  constructor(resource, headers, statusCode, permission, diagnostics) {\n    super(resource, headers, statusCode, diagnostics);\n    this.permission = permission;\n  }\n}","map":{"version":3,"names":["ResourceResponse","PermissionResponse","constructor","resource","headers","statusCode","permission","diagnostics"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/client/Permission/PermissionResponse.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { CosmosDiagnostics } from \"../../CosmosDiagnostics\";\nimport type { CosmosHeaders } from \"../../queryExecutionContext\";\nimport { ResourceResponse } from \"../../request\";\nimport type { Resource } from \"../Resource\";\nimport type { Permission } from \"./Permission\";\nimport type { PermissionBody } from \"./PermissionBody\";\nimport type { PermissionDefinition } from \"./PermissionDefinition\";\n\nexport class PermissionResponse extends ResourceResponse<\n  PermissionDefinition & PermissionBody & Resource\n> {\n  constructor(\n    resource: PermissionDefinition & PermissionBody & Resource,\n    headers: CosmosHeaders,\n    statusCode: number,\n    permission: Permission,\n    diagnostics: CosmosDiagnostics,\n  ) {\n    super(resource, headers, statusCode, diagnostics);\n    this.permission = permission;\n  }\n  /** A reference to the {@link Permission} corresponding to the returned {@link PermissionDefinition}. */\n  public readonly permission: Permission;\n}\n"],"mappings":"AAIA,SAASA,gBAAgB,QAAQ,eAAe;AAMhD,OAAM,MAAOC,kBAAmB,SAAQD,gBAEvC;EACCE,YACEC,QAA0D,EAC1DC,OAAsB,EACtBC,UAAkB,EAClBC,UAAsB,EACtBC,WAA8B;IAE9B,KAAK,CAACJ,QAAQ,EAAEC,OAAO,EAAEC,UAAU,EAAEE,WAAW,CAAC;IACjD,IAAI,CAACD,UAAU,GAAGA,UAAU;EAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}