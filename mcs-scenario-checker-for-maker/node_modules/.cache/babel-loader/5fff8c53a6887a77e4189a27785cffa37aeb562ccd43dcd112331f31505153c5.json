{"ast":null,"code":"/**\n * Expose `PriorityQueue`.\n */\nmodule.exports = PriorityQueue;\n\n/**\n * Initializes a new empty `PriorityQueue` with the given `comparator(a, b)`\n * function, uses `.DEFAULT_COMPARATOR()` when no function is provided.\n *\n * The comparator function must return a positive number when `a > b`, 0 when\n * `a == b` and a negative number when `a < b`.\n *\n * @param {Function}\n * @return {PriorityQueue}\n * @api public\n */\nfunction PriorityQueue(comparator) {\n  this._comparator = comparator || PriorityQueue.DEFAULT_COMPARATOR;\n  this._elements = [];\n}\n\n/**\n * Compares `a` and `b`, when `a > b` it returns a positive number, when\n * it returns 0 and when `a < b` it returns a negative number.\n *\n * @param {String|Number} a\n * @param {String|Number} b\n * @return {Number}\n * @api public\n */\nPriorityQueue.DEFAULT_COMPARATOR = function (a, b) {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a - b;\n  } else {\n    a = a.toString();\n    b = b.toString();\n    if (a == b) return 0;\n    return a > b ? 1 : -1;\n  }\n};\n\n/**\n * Returns whether the priority queue is empty or not.\n *\n * @return {Boolean}\n * @api public\n */\nPriorityQueue.prototype.isEmpty = function () {\n  return this.size() === 0;\n};\n\n/**\n * Peeks at the top element of the priority queue.\n *\n * @return {Object}\n * @throws {Error} when the queue is empty.\n * @api public\n */\nPriorityQueue.prototype.peek = function () {\n  if (this.isEmpty()) throw new Error('PriorityQueue is empty');\n  return this._elements[0];\n};\n\n/**\n * Dequeues the top element of the priority queue.\n *\n * @return {Object}\n * @throws {Error} when the queue is empty.\n * @api public\n */\nPriorityQueue.prototype.deq = function () {\n  var first = this.peek();\n  var last = this._elements.pop();\n  var size = this.size();\n  if (size === 0) return first;\n  this._elements[0] = last;\n  var current = 0;\n  while (current < size) {\n    var largest = current;\n    var left = 2 * current + 1;\n    var right = 2 * current + 2;\n    if (left < size && this._compare(left, largest) >= 0) {\n      largest = left;\n    }\n    if (right < size && this._compare(right, largest) >= 0) {\n      largest = right;\n    }\n    if (largest === current) break;\n    this._swap(largest, current);\n    current = largest;\n  }\n  return first;\n};\n\n/**\n * Enqueues the `element` at the priority queue and returns its new size.\n *\n * @param {Object} element\n * @return {Number}\n * @api public\n */\nPriorityQueue.prototype.enq = function (element) {\n  var size = this._elements.push(element);\n  var current = size - 1;\n  while (current > 0) {\n    var parent = Math.floor((current - 1) / 2);\n    if (this._compare(current, parent) <= 0) break;\n    this._swap(parent, current);\n    current = parent;\n  }\n  return size;\n};\n\n/**\n * Returns the size of the priority queue.\n *\n * @return {Number}\n * @api public\n */\nPriorityQueue.prototype.size = function () {\n  return this._elements.length;\n};\n\n/**\n *  Iterates over queue elements\n *\n *  @param {Function} fn\n */\nPriorityQueue.prototype.forEach = function (fn) {\n  return this._elements.forEach(fn);\n};\n\n/**\n * Compares the values at position `a` and `b` in the priority queue using its\n * comparator function.\n *\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @api private\n */\nPriorityQueue.prototype._compare = function (a, b) {\n  return this._comparator(this._elements[a], this._elements[b]);\n};\n\n/**\n * Swaps the values at position `a` and `b` in the priority queue.\n *\n * @param {Number} a\n * @param {Number} b\n * @api private\n */\nPriorityQueue.prototype._swap = function (a, b) {\n  var aux = this._elements[a];\n  this._elements[a] = this._elements[b];\n  this._elements[b] = aux;\n};","map":{"version":3,"names":["module","exports","PriorityQueue","comparator","_comparator","DEFAULT_COMPARATOR","_elements","a","b","toString","prototype","isEmpty","size","peek","Error","deq","first","last","pop","current","largest","left","right","_compare","_swap","enq","element","push","parent","Math","floor","length","forEach","fn","aux"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/priorityqueuejs/index.js"],"sourcesContent":["/**\n * Expose `PriorityQueue`.\n */\nmodule.exports = PriorityQueue;\n\n/**\n * Initializes a new empty `PriorityQueue` with the given `comparator(a, b)`\n * function, uses `.DEFAULT_COMPARATOR()` when no function is provided.\n *\n * The comparator function must return a positive number when `a > b`, 0 when\n * `a == b` and a negative number when `a < b`.\n *\n * @param {Function}\n * @return {PriorityQueue}\n * @api public\n */\nfunction PriorityQueue(comparator) {\n  this._comparator = comparator || PriorityQueue.DEFAULT_COMPARATOR;\n  this._elements = [];\n}\n\n/**\n * Compares `a` and `b`, when `a > b` it returns a positive number, when\n * it returns 0 and when `a < b` it returns a negative number.\n *\n * @param {String|Number} a\n * @param {String|Number} b\n * @return {Number}\n * @api public\n */\nPriorityQueue.DEFAULT_COMPARATOR = function(a, b) {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a - b;\n  } else {\n    a = a.toString();\n    b = b.toString();\n\n    if (a == b) return 0;\n\n    return (a > b) ? 1 : -1;\n  }\n};\n\n/**\n * Returns whether the priority queue is empty or not.\n *\n * @return {Boolean}\n * @api public\n */\nPriorityQueue.prototype.isEmpty = function() {\n  return this.size() === 0;\n};\n\n/**\n * Peeks at the top element of the priority queue.\n *\n * @return {Object}\n * @throws {Error} when the queue is empty.\n * @api public\n */\nPriorityQueue.prototype.peek = function() {\n  if (this.isEmpty()) throw new Error('PriorityQueue is empty');\n\n  return this._elements[0];\n};\n\n/**\n * Dequeues the top element of the priority queue.\n *\n * @return {Object}\n * @throws {Error} when the queue is empty.\n * @api public\n */\nPriorityQueue.prototype.deq = function() {\n  var first = this.peek();\n  var last = this._elements.pop();\n  var size = this.size();\n\n  if (size === 0) return first;\n\n  this._elements[0] = last;\n  var current = 0;\n\n  while (current < size) {\n    var largest = current;\n    var left = (2 * current) + 1;\n    var right = (2 * current) + 2;\n\n    if (left < size && this._compare(left, largest) >= 0) {\n      largest = left;\n    }\n\n    if (right < size && this._compare(right, largest) >= 0) {\n      largest = right;\n    }\n\n    if (largest === current) break;\n\n    this._swap(largest, current);\n    current = largest;\n  }\n\n  return first;\n};\n\n/**\n * Enqueues the `element` at the priority queue and returns its new size.\n *\n * @param {Object} element\n * @return {Number}\n * @api public\n */\nPriorityQueue.prototype.enq = function(element) {\n  var size = this._elements.push(element);\n  var current = size - 1;\n\n  while (current > 0) {\n    var parent = Math.floor((current - 1) / 2);\n\n    if (this._compare(current, parent) <= 0) break;\n\n    this._swap(parent, current);\n    current = parent;\n  }\n\n  return size;\n};\n\n/**\n * Returns the size of the priority queue.\n *\n * @return {Number}\n * @api public\n */\nPriorityQueue.prototype.size = function() {\n  return this._elements.length;\n};\n\n/**\n *  Iterates over queue elements\n *\n *  @param {Function} fn\n */\nPriorityQueue.prototype.forEach = function(fn) {\n  return this._elements.forEach(fn);\n};\n\n/**\n * Compares the values at position `a` and `b` in the priority queue using its\n * comparator function.\n *\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @api private\n */\nPriorityQueue.prototype._compare = function(a, b) {\n  return this._comparator(this._elements[a], this._elements[b]);\n};\n\n/**\n * Swaps the values at position `a` and `b` in the priority queue.\n *\n * @param {Number} a\n * @param {Number} b\n * @api private\n */\nPriorityQueue.prototype._swap = function(a, b) {\n  var aux = this._elements[a];\n  this._elements[a] = this._elements[b];\n  this._elements[b] = aux;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}