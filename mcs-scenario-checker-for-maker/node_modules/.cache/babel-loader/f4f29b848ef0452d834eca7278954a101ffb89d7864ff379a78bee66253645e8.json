{"ast":null,"code":"/** @hidden */\nexport class CountAggregator {\n  /**\n   * Represents an aggregator for COUNT operator.\n   * @hidden\n   */\n  constructor() {\n    this.value = 0;\n  }\n  /**\n   * Add the provided item to aggregation result.\n   */\n  aggregate(other) {\n    this.value += other;\n  }\n  /**\n   * Get the aggregation result.\n   */\n  getResult() {\n    return this.value;\n  }\n}","map":{"version":3,"names":["CountAggregator","constructor","value","aggregate","other","getResult"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/queryExecutionContext/Aggregators/CountAggregator.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { Aggregator } from \"./Aggregator\";\n\n/** @hidden */\nexport class CountAggregator implements Aggregator {\n  public value: number;\n  /**\n   * Represents an aggregator for COUNT operator.\n   * @hidden\n   */\n  constructor() {\n    this.value = 0;\n  }\n  /**\n   * Add the provided item to aggregation result.\n   */\n  public aggregate(other: number): void {\n    this.value += other;\n  }\n\n  /**\n   * Get the aggregation result.\n   */\n  public getResult(): number {\n    return this.value;\n  }\n}\n"],"mappings":"AAIA;AACA,OAAM,MAAOA,eAAe;EAE1B;;;;EAIAC,YAAA;IACE,IAAI,CAACC,KAAK,GAAG,CAAC;EAChB;EACA;;;EAGOC,SAASA,CAACC,KAAa;IAC5B,IAAI,CAACF,KAAK,IAAIE,KAAK;EACrB;EAEA;;;EAGOC,SAASA,CAAA;IACd,OAAO,IAAI,CAACH,KAAK;EACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}