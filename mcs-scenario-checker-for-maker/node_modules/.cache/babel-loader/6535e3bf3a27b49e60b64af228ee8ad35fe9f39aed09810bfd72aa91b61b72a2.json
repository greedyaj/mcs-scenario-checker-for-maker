{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ChangeFeedRange } from \"./ChangeFeedRange\";\n/**\n * @hidden\n * A queue for iterating over specified Epk ranges and fetch change feed for the given epk ranges.\n */\nexport class FeedRangeQueue {\n  constructor() {\n    this.elements = [];\n  }\n  modifyFirstElement(newItem) {\n    if (!this.isEmpty()) {\n      this.elements[0] = newItem;\n    }\n  }\n  enqueue(item) {\n    this.elements.push(item);\n  }\n  dequeue() {\n    return this.elements.shift();\n  }\n  peek() {\n    return !this.isEmpty() ? this.elements[0] : undefined;\n  }\n  isEmpty() {\n    return this.elements.length === 0;\n  }\n  moveFirstElementToTheEnd() {\n    if (!this.isEmpty()) {\n      this.elements.push(this.dequeue());\n    }\n  }\n  /**\n   * Returns a snapshot of the queue as an array to be used as Continuation token.\n   */\n  returnSnapshot() {\n    const allFeedRanges = [];\n    this.elements.map(element => {\n      const minInclusive = element.epkMinHeader ? element.epkMinHeader : element.minInclusive;\n      const maxExclusive = element.epkMaxHeader ? element.epkMaxHeader : element.maxExclusive;\n      const feedRangeElement = new ChangeFeedRange(minInclusive, maxExclusive, element.continuationToken);\n      allFeedRanges.push(feedRangeElement);\n    });\n    return allFeedRanges;\n  }\n}","map":{"version":3,"names":["ChangeFeedRange","FeedRangeQueue","constructor","elements","modifyFirstElement","newItem","isEmpty","enqueue","item","push","dequeue","shift","peek","undefined","length","moveFirstElementToTheEnd","returnSnapshot","allFeedRanges","map","element","minInclusive","epkMinHeader","maxExclusive","epkMaxHeader","feedRangeElement","continuationToken"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/client/ChangeFeed/FeedRangeQueue.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ChangeFeedRange } from \"./ChangeFeedRange\";\n/**\n * @hidden\n * A queue for iterating over specified Epk ranges and fetch change feed for the given epk ranges.\n */\nexport class FeedRangeQueue<T> {\n  private elements: ChangeFeedRange[];\n\n  constructor() {\n    this.elements = [];\n  }\n\n  public modifyFirstElement(newItem: ChangeFeedRange): void {\n    if (!this.isEmpty()) {\n      this.elements[0] = newItem;\n    }\n  }\n\n  public enqueue(item: ChangeFeedRange): void {\n    this.elements.push(item);\n  }\n\n  public dequeue(): ChangeFeedRange {\n    return this.elements.shift();\n  }\n\n  public peek(): T | ChangeFeedRange {\n    return !this.isEmpty() ? this.elements[0] : undefined;\n  }\n\n  public isEmpty(): boolean {\n    return this.elements.length === 0;\n  }\n\n  public moveFirstElementToTheEnd(): void {\n    if (!this.isEmpty()) {\n      this.elements.push(this.dequeue());\n    }\n  }\n  /**\n   * Returns a snapshot of the queue as an array to be used as Continuation token.\n   */\n  public returnSnapshot(): ChangeFeedRange[] {\n    const allFeedRanges: ChangeFeedRange[] = [];\n    this.elements.map((element) => {\n      const minInclusive = element.epkMinHeader ? element.epkMinHeader : element.minInclusive;\n      const maxExclusive = element.epkMaxHeader ? element.epkMaxHeader : element.maxExclusive;\n      const feedRangeElement = new ChangeFeedRange(\n        minInclusive,\n        maxExclusive,\n        element.continuationToken,\n      );\n      allFeedRanges.push(feedRangeElement);\n    });\n    return allFeedRanges;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,eAAe,QAAQ,mBAAmB;AACnD;;;;AAIA,OAAM,MAAOC,cAAc;EAGzBC,YAAA;IACE,IAAI,CAACC,QAAQ,GAAG,EAAE;EACpB;EAEOC,kBAAkBA,CAACC,OAAwB;IAChD,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE,EAAE;MACnB,IAAI,CAACH,QAAQ,CAAC,CAAC,CAAC,GAAGE,OAAO;IAC5B;EACF;EAEOE,OAAOA,CAACC,IAAqB;IAClC,IAAI,CAACL,QAAQ,CAACM,IAAI,CAACD,IAAI,CAAC;EAC1B;EAEOE,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACP,QAAQ,CAACQ,KAAK,EAAE;EAC9B;EAEOC,IAAIA,CAAA;IACT,OAAO,CAAC,IAAI,CAACN,OAAO,EAAE,GAAG,IAAI,CAACH,QAAQ,CAAC,CAAC,CAAC,GAAGU,SAAS;EACvD;EAEOP,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACH,QAAQ,CAACW,MAAM,KAAK,CAAC;EACnC;EAEOC,wBAAwBA,CAAA;IAC7B,IAAI,CAAC,IAAI,CAACT,OAAO,EAAE,EAAE;MACnB,IAAI,CAACH,QAAQ,CAACM,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE,CAAC;IACpC;EACF;EACA;;;EAGOM,cAAcA,CAAA;IACnB,MAAMC,aAAa,GAAsB,EAAE;IAC3C,IAAI,CAACd,QAAQ,CAACe,GAAG,CAAEC,OAAO,IAAI;MAC5B,MAAMC,YAAY,GAAGD,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACC,YAAY;MACvF,MAAME,YAAY,GAAGH,OAAO,CAACI,YAAY,GAAGJ,OAAO,CAACI,YAAY,GAAGJ,OAAO,CAACG,YAAY;MACvF,MAAME,gBAAgB,GAAG,IAAIxB,eAAe,CAC1CoB,YAAY,EACZE,YAAY,EACZH,OAAO,CAACM,iBAAiB,CAC1B;MACDR,aAAa,CAACR,IAAI,CAACe,gBAAgB,CAAC;IACtC,CAAC,CAAC;IACF,OAAOP,aAAa;EACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}