{"ast":null,"code":"/** @hidden */\n/**\n * Represents an aggregator that collects unique values into a set.\n */\nexport class MakeSetAggregator {\n  constructor() {\n    this.value = new Set();\n  }\n  /**\n   * Aggregates the values from another set into the current set.\n   * @param other - The set to aggregate.\n   */\n  aggregate(other) {\n    other.forEach(item => {\n      this.value.add(item);\n    });\n  }\n  /**\n   * Gets the result of the MakeSetAggregator.\n   * @returns A Set containing the unique values collected by the aggregator.\n   */\n  getResult() {\n    return Array.from(this.value);\n  }\n}","map":{"version":3,"names":["MakeSetAggregator","constructor","value","Set","aggregate","other","forEach","item","add","getResult","Array","from"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/queryExecutionContext/Aggregators/MakeSetAggregator.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { Aggregator } from \"./Aggregator\";\n\n/** @hidden */\n/**\n * Represents an aggregator that collects unique values into a set.\n */\nexport class MakeSetAggregator implements Aggregator {\n  value: Set<any>;\n\n  constructor() {\n    this.value = new Set();\n  }\n\n  /**\n   * Aggregates the values from another set into the current set.\n   * @param other - The set to aggregate.\n   */\n  public aggregate(other: any[]): void {\n    other.forEach((item) => {\n      this.value.add(item);\n    });\n  }\n\n  /**\n   * Gets the result of the MakeSetAggregator.\n   * @returns A Set containing the unique values collected by the aggregator.\n   */\n  public getResult(): any {\n    return Array.from(this.value);\n  }\n}\n"],"mappings":"AAIA;AACA;;;AAGA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAA;IACE,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,EAAE;EACxB;EAEA;;;;EAIOC,SAASA,CAACC,KAAY;IAC3BA,KAAK,CAACC,OAAO,CAAEC,IAAI,IAAI;MACrB,IAAI,CAACL,KAAK,CAACM,GAAG,CAACD,IAAI,CAAC;IACtB,CAAC,CAAC;EACJ;EAEA;;;;EAIOE,SAASA,CAAA;IACd,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACT,KAAK,CAAC;EAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}