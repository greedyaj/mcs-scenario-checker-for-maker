{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createClientLogger } from \"@azure/logger\";\n/**\n * Implementation of DiagnosticWriter, which uses \\@azure/logger to write\n * diagnostics.\n * @hidden\n */\nexport class LogDiagnosticWriter {\n  constructor() {\n    this.logger = createClientLogger(\"CosmosDBDiagnostics\");\n  }\n  async write(diagnosticsData) {\n    this.logger.verbose(diagnosticsData);\n  }\n}\n/**\n * Implementation of a no-op DiagnosticWriter.\n * @hidden\n */\nexport class NoOpDiagnosticWriter {\n  async write(_diagnosticsData) {\n    // No op\n  }\n}","map":{"version":3,"names":["createClientLogger","LogDiagnosticWriter","constructor","logger","write","diagnosticsData","verbose","NoOpDiagnosticWriter","_diagnosticsData"],"sources":["/Users/ajitpawar/microsoft/bap/POCs/Scenario_checker_for_maker/mcs-scenario-checker-for-maker/node_modules/@azure/cosmos/src/diagnostics/DiagnosticWriter.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AzureLogger } from \"@azure/logger\";\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * Interface for a Diagnostic Writer.\n * @hidden\n */\nexport interface DiagnosticWriter {\n  write(message: string): Promise<void>;\n}\n\n/**\n * Implementation of DiagnosticWriter, which uses \\@azure/logger to write\n * diagnostics.\n * @hidden\n */\nexport class LogDiagnosticWriter implements DiagnosticWriter {\n  private logger: AzureLogger = createClientLogger(\"CosmosDBDiagnostics\");\n  public async write(diagnosticsData: string): Promise<void> {\n    this.logger.verbose(diagnosticsData);\n  }\n}\n\n/**\n * Implementation of a no-op DiagnosticWriter.\n * @hidden\n */\nexport class NoOpDiagnosticWriter implements DiagnosticWriter {\n  public async write(_diagnosticsData: string): Promise<void> {\n    // No op\n  }\n}\n"],"mappings":"AAAA;AACA;AAGA,SAASA,kBAAkB,QAAQ,eAAe;AAUlD;;;;;AAKA,OAAM,MAAOC,mBAAmB;EAAhCC,YAAA;IACU,KAAAC,MAAM,GAAgBH,kBAAkB,CAAC,qBAAqB,CAAC;EAIzE;EAHS,MAAMI,KAAKA,CAACC,eAAuB;IACxC,IAAI,CAACF,MAAM,CAACG,OAAO,CAACD,eAAe,CAAC;EACtC;;AAGF;;;;AAIA,OAAM,MAAOE,oBAAoB;EACxB,MAAMH,KAAKA,CAACI,gBAAwB;IACzC;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}